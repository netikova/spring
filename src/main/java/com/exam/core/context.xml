<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- com.exam.core.MyApp 객체(인스턴스)를 생성(new)하여 ma라는 이름으로 스프링에 등록 -->
	<!-- 이름은 id 또는 name 속성을 사용하여 지정 -->
	<!-- <bean id="ma" class="com.exam.core.MyApp"> -->
	    <!-- 이 객체의 myService 속성(필드)에 스프링에 mse라는 이름으로 등록된 객체를 주입(저장) -->
	<!-- <property name="myService" ref="msk" ></property> --> <!-- property = 변수 설정, MyApp안에 변수가 하나기때문에 자동완성하면 myService만 나온다. -->
	<!-- </bean> --><!-- 객체생성할때 이용 -->
	
	<!-- <bean id="mse" class="com.exam.core.MyServiceEn"></bean> -->
	
	<!-- <bean id="msk" class="com.exam.core.MyServiceKo"></bean> -->
	
	<!-- com.exam.core 패키지 아래에 존재하는 클래스들 중 -->
	<!-- @Component, @Controller, @Service, @Reposity, @Named 등의 애노테이션이 적용된 클래스들의 -->
	<!-- 객체를 생성하여 스프링에 등록 -->
	<context:component-scan base-package="com.exam.core"></context:component-scan>
	
	<!-- 끼워넣을 코드를 담고 있는 MyAdvice 객체를 스프링에 등록 -->
	<!-- <bean id="adv" class="com.exam.core.MyAdvice"></bean> -->
	
	<!-- <aop:config> -->
	   <!-- 여러번 사용하는 포인트컷은 이름을 붙여 등록시켜서 사용 가능 -->
	   <!-- <aop:pointcut expression="execution(* com.exam.core.MyService.*(..))" id="pc"/> -->
	   <!-- <aop:pointcut expression="execution(* com.exam.core.*.*(..))" id="pc"/> -->
	   <!-- aspect : 어떤 코드를(Advice)를 어느 지점(pointcut)에 끼워넣을 것인지를 설정 -->
	   <!-- <aop:aspect ref="adv"> -->
	      <!-- adv 객체의 bm메서드를 MyService 객체의 모든 메서드 실행 전에 끼어넣어서 실행 -->
	      <!-- <aop:before method="bm" pointcut-ref="pc"/> --> <!-- 첫번째 *은 리턴타입, *은 아무거나와도 상관없다. -->	
	      <!-- adv 객체의 am메서드를 MyService 객체의 모든 메서드 실행 후에 끼어넣어서 실행 -->
	      <!-- <aop:after method="am" pointcut-ref="pc"/> --> <!-- 첫번째 *은 리턴타입, *은 아무거나와도 상관없다. -->	   
	      <!-- aop:around method="rm" pointcut-ref="pc" />   -->                                                       
	   <!-- </aop:aspect> -->
	<!-- </aop:config> -->
	
	<!-- @Aspect와 같은 애노테이션을 사용하여 AOP설정 -->	
	
	<aop:aspectj-autoproxy />
		
</beans>
<!-- spring설정파일 -->
